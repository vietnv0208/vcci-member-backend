// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  MANAGEMENT
  ADMIN
  SUPER_ADMIN
}

model User {
  id         String    @id @default(cuid())
  fullName   String
  email      String    @unique
  password   String
  role       UserRole  @default(MANAGEMENT)
  active     Boolean   @default(true)
  department String?
  lastLogin  DateTime?

  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  refreshTokens RefreshToken[]
  File          File[]
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
}

//File management

model File {
  id        String      @id @default(cuid())
  fileName  String
  fileType  FileType    @default(OTHER)
  storeType StorageType @default(LOCAL)

  mimeType    String?
  fileSize    Int?
  storagePath String //local path or S3 key
  publicUrl   String?
  checksum    String?

  entityType String? // e.g., "MEMBER", "ARTICLE"
  entityId   String? // C√≥ th·ªÉ null khi upload t·∫°m
  tempKey    String? // üîë Kh√≥a t·∫°m ƒë·ªÉ gom nh√≥m file tr∆∞·ªõc khi g√°n entityId

  category    String? // e.g., "MEMBERSHIP_APPLICATION", "BUSINESS_LICENSE"
  description String?

  folderId String?
  folder   Folder? @relation(fields: [folderId], references: [id])

  uploadedById String?
  uploadedBy   User?   @relation(fields: [uploadedById], references: [id])

  visibility FileVisibility @default(PRIVATE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deleted Boolean @default(false)
}

model Folder {
  id         String   @id @default(cuid())
  name       String   @db.VarChar(255)
  parentId   String?
  parent     Folder?  @relation("FolderToSubFolder", fields: [parentId], references: [id])
  subFolders Folder[] @relation("FolderToSubFolder")
  files      File[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum FileType {
  IMAGE
  VIDEO
  AUDIO
  DOCUMENT
  PDF
  EXCEL
  OTHER
}

enum EntityType {
  MEMBER
}

enum FileCategory {
  MEMBERSHIP_APPLICATION // ƒê∆°n ƒëƒÉng k√Ω h·ªôi vi√™n
  BUSINESS_LICENSE // Gi·∫•y ph√©p kinh doanh
  FINANCIAL_REPORT // B√°o c√°o t√†i ch√≠nh
  PAYMENT_PROOF // ·ª¶y nhi·ªám chi, bi√™n lai
  OTHER_DOCUMENT // T√†i li·ªáu kh√°c
}

enum FileVisibility {
  PUBLIC
  PRIVATE
  INTERNAL
}

enum StorageType {
  LOCAL
  S3
}

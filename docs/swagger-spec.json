{
  "openapi": "3.0.0",
  "paths": {
    "/api": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "fullName": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "department": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "summary": "User login",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "User logout",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        },
        "summary": "Refresh access token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/change-password": {
      "post": {
        "operationId": "AuthController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Current password is incorrect"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Change user password",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "fullName": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "department": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get current user profile",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/revoke-refresh-token": {
      "post": {
        "operationId": "AuthController_revokeRefreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh token revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Revoke a specific refresh token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/revoke-all-refresh-tokens": {
      "post": {
        "operationId": "AuthController_revokeAllRefreshTokens",
        "parameters": [],
        "responses": {
          "200": {
            "description": "All refresh tokens revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Revoke all refresh tokens for current user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/refresh-tokens": {
      "get": {
        "operationId": "AuthController_getUserRefreshTokens",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Refresh tokens retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get all active refresh tokens for current user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "409": {
            "description": "Email already exists"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Create a new user",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by email or full name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "description": "Filter by role",
            "schema": {
              "type": "string",
              "enum": [
                "SUPER_ADMIN",
                "ADMIN",
                "MANAGEMENT",
                "MEMBER"
              ]
            }
          },
          {
            "name": "active",
            "required": false,
            "in": "query",
            "description": "Filter by active status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "department",
            "required": false,
            "in": "query",
            "description": "Filter by department",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "required": false,
            "in": "query",
            "description": "Include deleted users",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort by field",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order (asc/desc)",
            "schema": {
              "default": "desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get all users with filtering and pagination",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/stats": {
      "get": {
        "operationId": "UsersController_getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get user statistics",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get user by ID",
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "Email already exists"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Update user information",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Soft delete user (set deleted flag)",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/status": {
      "patch": {
        "operationId": "UsersController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User status updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Update user active/inactive status",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/reset-password": {
      "patch": {
        "operationId": "UsersController_resetPassword",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Reset user password (no current password required - admin only)",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/restore": {
      "patch": {
        "operationId": "UsersController_restore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User restored successfully"
          },
          "400": {
            "description": "User is not deleted"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Restore a deleted user",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/hard": {
      "delete": {
        "operationId": "UsersController_hardDelete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User permanently deleted"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Permanently delete user",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/files/upload": {
      "post": {
        "description": "Uploads a file directly to the backend, which handles S3 upload internally",
        "operationId": "FilesController_uploadFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File to upload"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "MEMBERSHIP_APPLICATION",
                      "BUSINESS_LICENSE",
                      "FINANCIAL_REPORT",
                      "PAYMENT_PROOF",
                      "OTHER_DOCUMENT"
                    ],
                    "description": "File category"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "ID of the entity this file belongs to"
                  },
                  "entityType": {
                    "type": "string",
                    "description": "Type of entity this file belongs to"
                  },
                  "folderPath": {
                    "type": "string",
                    "description": "Target folder path for upload (e.g., /Documents/Projects)"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponseDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation error or file type not allowed"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Upload file directly to backend",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/files/{id}": {
      "get": {
        "description": "Retrieves file metadata by ID",
        "operationId": "FilesController_getFile",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "File ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File information retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "File not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get file information",
        "tags": [
          "Files"
        ]
      },
      "delete": {
        "description": "Deletes the file from both storage and the database",
        "operationId": "FilesController_deleteFile",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "File ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted successfully"
          },
          "404": {
            "description": "File not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Delete file",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/files/{id}/download": {
      "get": {
        "description": "Streams the file content directly from the server",
        "operationId": "FilesController_downloadFile",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "File ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File content streamed",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "File not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Download file",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/files/{id}/download-url": {
      "get": {
        "description": "Get download URL for the file",
        "operationId": "FilesController_downloadFileUrl",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "File ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Download URL retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "downloadUrl": {
                      "type": "string",
                      "description": "Download URL for the file"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "File not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Download file url",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/files": {
      "get": {
        "description": "Retrieves all files associated with a specific entity",
        "operationId": "FilesController_getFilesByEntity",
        "parameters": [
          {
            "name": "entityType",
            "required": true,
            "in": "query",
            "description": "Type of entity (e.g., User, LeaveRequest)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "query",
            "description": "ID of the entity",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get files by entity",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/files/drives/{entityType}/{entityId}/folders": {
      "post": {
        "description": "Creates a new folder in the specified drive",
        "operationId": "FilesController_createFolder",
        "parameters": [
          {
            "name": "entityType",
            "required": true,
            "in": "path",
            "description": "Type of entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "description": "ID of the entity",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Folder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "parentId": {
                      "type": "string"
                    },
                    "driveId": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Create folder",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/files/attach": {
      "post": {
        "description": "Attach files uploaded with tempKey to a specific entity",
        "operationId": "FilesController_attachTempFiles",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachFilesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Files attached successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachFilesResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "No files found with the given tempKey"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Attach temporary files to entity",
        "tags": [
          "Files"
        ]
      }
    },
    "/api/public/files/upload": {
      "post": {
        "description": "Uploads a file directly to the backend, which handles S3 upload internally",
        "operationId": "FilesPublicController_uploadFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File to upload"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "MEMBERSHIP_APPLICATION",
                      "BUSINESS_LICENSE",
                      "FINANCIAL_REPORT",
                      "PAYMENT_PROOF",
                      "OTHER_DOCUMENT"
                    ],
                    "description": "File category"
                  },
                  "entityId": {
                    "type": "string",
                    "description": "ID of the entity this file belongs to"
                  },
                  "entityType": {
                    "type": "string",
                    "description": "Type of entity this file belongs to"
                  },
                  "folderPath": {
                    "type": "string",
                    "description": "Target folder path for upload (e.g., /Documents/Projects)"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponseDto"
                }
              }
            }
          },
          "422": {
            "description": "Validation error or file type not allowed"
          }
        },
        "summary": "Upload file directly to backend",
        "tags": [
          "Public Files"
        ]
      }
    },
    "/api/public/files/attach": {
      "post": {
        "description": "Attach files uploaded with tempKey to a specific entity",
        "operationId": "FilesPublicController_attachTempFiles",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachFilesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Files attached successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachFilesResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "No files found with the given tempKey"
          }
        },
        "summary": "Attach temporary files to entity",
        "tags": [
          "Public Files"
        ]
      }
    },
    "/api/members": {
      "post": {
        "operationId": "MembersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Đơn đăng ký đã được tạo thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "409": {
            "description": "Email đã tồn tại"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Tạo đơn đăng ký hội viên mới",
        "tags": [
          "Members"
        ]
      },
      "get": {
        "operationId": "MembersController_findAll",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Tìm kiếm theo tên, email, mã số thuế, mã hội viên, mã đơn đăng ký",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationType",
            "required": false,
            "in": "query",
            "description": "Lọc theo loại đơn đăng ký",
            "schema": {
              "enum": [
                "ENTERPRISE",
                "ASSOCIATION"
              ],
              "type": "string"
            }
          },
          {
            "name": "memberType",
            "required": false,
            "in": "query",
            "description": "Lọc theo loại hội viên",
            "schema": {
              "enum": [
                "LINKED",
                "OFFICIAL",
                "HONORARY"
              ],
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Lọc theo trạng thái",
            "schema": {
              "enum": [
                "PENDING",
                "APPROVED",
                "REJECTED",
                "CANCELLED",
                "ACTIVE",
                "SUSPENDED"
              ],
              "type": "string"
            }
          },
          {
            "name": "businessCategoryId",
            "required": false,
            "in": "query",
            "description": "Lọc theo ngành nghề kinh doanh (sẽ tìm cả category con)",
            "schema": {
              "example": "clxxxxxxxxxxxxxx",
              "type": "string"
            }
          },
          {
            "name": "submittedDateFrom",
            "required": false,
            "in": "query",
            "description": "Lọc theo ngày đăng ký từ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "submittedDateTo",
            "required": false,
            "in": "query",
            "description": "Lọc theo ngày đăng ký đến",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approvedDateFrom",
            "required": false,
            "in": "query",
            "description": "Lọc theo ngày duyệt từ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approvedDateTo",
            "required": false,
            "in": "query",
            "description": "Lọc theo ngày duyệt đến",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Số trang",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Số lượng mỗi trang",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sắp xếp theo trường",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Thứ tự sắp xếp",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách hội viên",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberListResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy danh sách hội viên",
        "tags": [
          "Members"
        ]
      }
    },
    "/api/members/statistics": {
      "get": {
        "operationId": "MembersController_getStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Thống kê hội viên"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy thống kê hội viên",
        "tags": [
          "Members"
        ]
      }
    },
    "/api/members/{id}": {
      "get": {
        "operationId": "MembersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của hội viên",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông tin chi tiết hội viên",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy hội viên"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy thông tin chi tiết hội viên",
        "tags": [
          "Members"
        ]
      },
      "patch": {
        "operationId": "MembersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của hội viên",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Thông tin hội viên đã được cập nhật",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "404": {
            "description": "Không tìm thấy hội viên"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Cập nhật thông tin hội viên",
        "tags": [
          "Members"
        ]
      },
      "delete": {
        "operationId": "MembersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của hội viên",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Hội viên đã được xóa"
          },
          "404": {
            "description": "Không tìm thấy hội viên"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Xóa hội viên",
        "tags": [
          "Members"
        ]
      }
    },
    "/api/members/code/{code}": {
      "get": {
        "operationId": "MembersController_findByCode",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "path",
            "description": "Mã hội viên",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông tin chi tiết hội viên",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy hội viên"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy thông tin hội viên theo mã hội viên",
        "tags": [
          "Members"
        ]
      }
    },
    "/api/members/application-code/{applicationCode}": {
      "get": {
        "operationId": "MembersController_findByApplicationCode",
        "parameters": [
          {
            "name": "applicationCode",
            "required": true,
            "in": "path",
            "description": "Mã đơn đăng ký hội viên",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông tin chi tiết hội viên",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy hội viên"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy thông tin hội viên theo mã đơn đăng ký",
        "tags": [
          "Members"
        ]
      }
    },
    "/api/members/{id}/status": {
      "patch": {
        "operationId": "MembersController_changeStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của hội viên",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeMemberStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trạng thái hội viên đã được thay đổi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Chuyển trạng thái không hợp lệ"
          },
          "404": {
            "description": "Không tìm thấy hội viên"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Thay đổi trạng thái hội viên",
        "tags": [
          "Members"
        ]
      }
    },
    "/api/members/{id}/activate": {
      "post": {
        "description": "Chuyển trạng thái từ APPROVED sang ACTIVE, cập nhật trạng thái hội phí sang PAID và tạo lịch sử thanh toán",
        "operationId": "MembersController_activateMember",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của hội viên",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateMemberDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hội viên đã được kích hoạt thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Hội viên không ở trạng thái APPROVED"
          },
          "404": {
            "description": "Không tìm thấy hội viên"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Kích hoạt hội viên",
        "tags": [
          "Members"
        ]
      }
    },
    "/api/public/members/register": {
      "post": {
        "description": "API công khai cho phép doanh nghiệp/hiệp hội tự đăng ký làm hội viên VCCI. Đơn đăng ký sẽ có trạng thái PENDING và chờ xét duyệt.",
        "operationId": "MembersPublicController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Đơn đăng ký đã được tạo thành công và đang chờ xét duyệt",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "409": {
            "description": "Email đã tồn tại trong hệ thống"
          }
        },
        "summary": "Đăng ký hội viên mới (Public - không cần authentication)",
        "tags": [
          "Members (Public)"
        ]
      }
    },
    "/api/public/members/application-code/{applicationCode}": {
      "get": {
        "operationId": "MembersPublicController_findByApplicationCode",
        "parameters": [
          {
            "name": "applicationCode",
            "required": true,
            "in": "path",
            "description": "Mã đơn đăng ký hội viên",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông tin chi tiết hội viên",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy hội viên"
          }
        },
        "summary": "Lấy thông tin hội viên theo mã đơn đăng ký",
        "tags": [
          "Members (Public)"
        ]
      }
    },
    "/api/business-categories": {
      "post": {
        "operationId": "BusinessCategoriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBusinessCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Business category đã được tạo thành công"
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "409": {
            "description": "Code đã tồn tại"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Tạo mới business category",
        "tags": [
          "Business Categories"
        ]
      },
      "get": {
        "operationId": "BusinessCategoriesController_findAll",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Tìm kiếm theo tên hoặc mã",
            "schema": {
              "example": "Nông nghiệp",
              "type": "string"
            }
          },
          {
            "name": "level",
            "required": false,
            "in": "query",
            "description": "Lọc theo cấp độ",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "parentId",
            "required": false,
            "in": "query",
            "description": "Lọc theo parent ID (null để lấy root categories)",
            "schema": {
              "$ref": "#/components/schemas/Object"
            }
          },
          {
            "name": "includeChildren",
            "required": false,
            "in": "query",
            "description": "Lấy kèm children (hierarchical)",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Số trang",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Số lượng mỗi trang",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách business categories"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy danh sách business categories với phân trang",
        "tags": [
          "Business Categories"
        ]
      }
    },
    "/api/business-categories/tree": {
      "get": {
        "operationId": "BusinessCategoriesController_getTree",
        "parameters": [
          {
            "name": "rootLevel",
            "required": false,
            "in": "query",
            "description": "Level gốc của cây (mặc định: 1)",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cây phân cấp business categories"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy cây phân cấp business categories",
        "tags": [
          "Business Categories"
        ]
      }
    },
    "/api/business-categories/{id}": {
      "get": {
        "operationId": "BusinessCategoriesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của business category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeChildren",
            "required": false,
            "in": "query",
            "description": "Bao gồm danh mục con",
            "schema": {
              "example": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chi tiết business category"
          },
          "404": {
            "description": "Không tìm thấy business category"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy chi tiết một business category",
        "tags": [
          "Business Categories"
        ]
      },
      "patch": {
        "operationId": "BusinessCategoriesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của business category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBusinessCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Business category đã được cập nhật"
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "404": {
            "description": "Không tìm thấy business category"
          },
          "409": {
            "description": "Code đã tồn tại"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Cập nhật business category",
        "tags": [
          "Business Categories"
        ]
      },
      "delete": {
        "operationId": "BusinessCategoriesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của business category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Business category đã được xóa"
          },
          "400": {
            "description": "Không thể xóa danh mục có danh mục con hoặc đang được sử dụng"
          },
          "404": {
            "description": "Không tìm thấy business category"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Xóa business category",
        "tags": [
          "Business Categories"
        ]
      }
    },
    "/api/business-categories/{id}/children": {
      "get": {
        "operationId": "BusinessCategoriesController_getChildren",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của business category cha",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách danh mục con"
          },
          "404": {
            "description": "Không tìm thấy business category"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy tất cả danh mục con của một business category",
        "tags": [
          "Business Categories"
        ]
      }
    },
    "/api/public/business-categories/tree": {
      "get": {
        "operationId": "BusinessCategoriesPublicController_getPublicTree",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Tìm kiếm theo tên hoặc mã",
            "schema": {
              "example": "Nông nghiệp",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cây phân cấp business categories đang hoạt động"
          }
        },
        "summary": "Lấy cây phân cấp business categories (Public, chỉ isActive)",
        "tags": [
          "Business Categories (Public)"
        ]
      }
    },
    "/api/activity-logs": {
      "get": {
        "operationId": "ActivityLogController_getActivityLogs",
        "parameters": [
          {
            "name": "action",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "SUBMIT_APPLICATION",
                "APPROVE_APPLICATION",
                "REJECT_APPLICATION",
                "PAY_ANNUAL_FEE",
                "MEMBER_ACTIVATED",
                "MEMBER_SUSPENDED",
                "PAY_MULTI_YEARS",
                "EDIT_BASIC_INFO",
                "UPDATE_ATTACHMENT",
                "LOGIN",
                "LOGOUT",
                "CHANGE_PASSWORD",
                "RESET_PASSWORD",
                "CREATE_USER",
                "UPDATE_USER",
                "DELETE_USER",
                "UPLOAD_FILE",
                "DELETE_FILE"
              ],
              "type": "string"
            }
          },
          {
            "name": "targetType",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "MEMBER",
                "USER",
                "FILE",
                "SYSTEM"
              ],
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy danh sách hoạt động",
        "tags": [
          "Activity Logs"
        ]
      }
    },
    "/api/payment-history": {
      "post": {
        "operationId": "PaymentHistoryController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentHistoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tạo lịch sử thanh toán thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentHistoryResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "404": {
            "description": "Không tìm thấy hội viên"
          },
          "409": {
            "description": "Mã giao dịch đã tồn tại"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Tạo lịch sử thanh toán mới",
        "tags": [
          "Payment History"
        ]
      },
      "get": {
        "operationId": "PaymentHistoryController_findAll",
        "parameters": [
          {
            "name": "memberId",
            "required": false,
            "in": "query",
            "description": "ID của hội viên",
            "schema": {
              "example": "clx1234567890abcdef",
              "type": "string"
            }
          },
          {
            "name": "paymentYear",
            "required": false,
            "in": "query",
            "description": "Năm hội phí",
            "schema": {
              "minimum": 2000,
              "maximum": 2100,
              "example": 2024,
              "type": "number"
            }
          },
          {
            "name": "paymentName",
            "required": false,
            "in": "query",
            "description": "Tên giao dịch thanh toán",
            "schema": {
              "example": "Hội phí năm 2024",
              "type": "string"
            }
          },
          {
            "name": "paymentCode",
            "required": false,
            "in": "query",
            "description": "Mã giao dịch thanh toán",
            "schema": {
              "example": "VCCI-PAY-2024-001",
              "type": "string"
            }
          },
          {
            "name": "method",
            "required": false,
            "in": "query",
            "description": "Hình thức thanh toán",
            "schema": {
              "type": "string",
              "enum": [
                "CASH",
                "BANK_TRANSFER",
                "ONLINE"
              ]
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Trạng thái thanh toán",
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "PAID",
                "CANCELLED"
              ]
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Tìm kiếm theo từ khóa (tên giao dịch, mã giao dịch, ghi chú)",
            "schema": {
              "example": "Hội phí",
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "required": false,
            "in": "query",
            "description": "Từ ngày thanh toán",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "required": false,
            "in": "query",
            "description": "Đến ngày thanh toán",
            "schema": {
              "example": "2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Số trang",
            "schema": {
              "minimum": 1,
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Số lượng bản ghi mỗi trang",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sắp xếp theo trường",
            "schema": {
              "example": "paymentDate",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Thứ tự sắp xếp",
            "schema": {
              "example": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách lịch sử thanh toán thành công"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy danh sách lịch sử thanh toán",
        "tags": [
          "Payment History"
        ]
      }
    },
    "/api/payment-history/summary": {
      "get": {
        "operationId": "PaymentHistoryController_getSummary",
        "parameters": [
          {
            "name": "memberId",
            "required": false,
            "in": "query",
            "description": "ID của hội viên (tùy chọn)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "required": false,
            "in": "query",
            "description": "Năm hội phí (tùy chọn)",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy thống kê thanh toán thành công"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy thống kê thanh toán",
        "tags": [
          "Payment History"
        ]
      }
    },
    "/api/payment-history/generate-code/{year}": {
      "get": {
        "operationId": "PaymentHistoryController_generatePaymentCode",
        "parameters": [
          {
            "name": "year",
            "required": true,
            "in": "path",
            "description": "Năm hội phí",
            "schema": {
              "example": 2024,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tạo mã giao dịch thành công",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentCode": {
                      "type": "string",
                      "example": "VCCI-PAY-2024-001"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Tạo mã giao dịch mới cho năm",
        "tags": [
          "Payment History"
        ]
      }
    },
    "/api/payment-history/member/{memberId}": {
      "get": {
        "operationId": "PaymentHistoryController_findByMemberId",
        "parameters": [
          {
            "name": "memberId",
            "required": true,
            "in": "path",
            "description": "ID của hội viên",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "required": false,
            "in": "query",
            "description": "Năm hội phí (tùy chọn)",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy lịch sử thanh toán của hội viên thành công",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentHistoryResponseDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy hội viên"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy lịch sử thanh toán của hội viên",
        "tags": [
          "Payment History"
        ]
      }
    },
    "/api/payment-history/{id}": {
      "get": {
        "operationId": "PaymentHistoryController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của lịch sử thanh toán",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy chi tiết lịch sử thanh toán thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentHistoryResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch sử thanh toán"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Lấy chi tiết lịch sử thanh toán",
        "tags": [
          "Payment History"
        ]
      },
      "patch": {
        "operationId": "PaymentHistoryController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của lịch sử thanh toán",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentHistoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật lịch sử thanh toán thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentHistoryResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "404": {
            "description": "Không tìm thấy lịch sử thanh toán hoặc hội viên"
          },
          "409": {
            "description": "Mã giao dịch đã tồn tại"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Cập nhật lịch sử thanh toán",
        "tags": [
          "Payment History"
        ]
      },
      "delete": {
        "operationId": "PaymentHistoryController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID của lịch sử thanh toán",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Xóa lịch sử thanh toán thành công"
          },
          "404": {
            "description": "Không tìm thấy lịch sử thanh toán"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Xóa lịch sử thanh toán",
        "tags": [
          "Payment History"
        ]
      }
    },
    "/api/common/categories": {
      "get": {
        "description": "Supports filtering by type, searching by code/name, and pagination",
        "operationId": "CategoryController_findAll",
        "parameters": [
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Filter by category type",
            "schema": {
              "type": "string",
              "enum": [
                "ORGANIZATION_TYPE"
              ]
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search text for code and name fields",
            "schema": {
              "example": "TNHH",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryListResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get all categories with filtering, searching, and pagination",
        "tags": [
          "Categories"
        ]
      },
      "post": {
        "operationId": "CategoryController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "Category name or code already exists"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Create new category",
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/common/categories/active/{type}": {
      "get": {
        "description": "Returns only id, code, and name of active categories sorted by orderIndex and name",
        "operationId": "CategoryController_findActiveByType",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Category type to filter by",
            "schema": {
              "enum": [
                "ORGANIZATION_TYPE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Active categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategorySummaryDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get active categories by type",
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/common/categories/type/{type}": {
      "get": {
        "operationId": "CategoryController_findByType",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Category type to filter by",
            "schema": {
              "enum": [
                "ORGANIZATION_TYPE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get categories by type",
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/common/categories/types": {
      "get": {
        "operationId": "CategoryController_getCategoryTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of all category types with their display labels and parent rules",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "enum": [
                          "ORGANIZATION_TYPE"
                        ]
                      },
                      "label": {
                        "type": "string"
                      },
                      "parentType": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get all category types with labels & parent rules",
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/common/categories/{id}": {
      "get": {
        "operationId": "CategoryController_findById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Category ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get category by ID",
        "tags": [
          "Categories"
        ]
      },
      "put": {
        "operationId": "CategoryController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Category ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Category not found"
          },
          "409": {
            "description": "Category name or code already exists"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Update category",
        "tags": [
          "Categories"
        ]
      },
      "delete": {
        "operationId": "CategoryController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Category ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          },
          "400": {
            "description": "Cannot delete category with children"
          },
          "404": {
            "description": "Category not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Delete category",
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/common/categories/{id}/toggle-active": {
      "put": {
        "operationId": "CategoryController_toggleActive",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Category ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category status toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Toggle category active status",
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/database-seeder/seeds": {
      "post": {
        "description": "\n    Chạy tất cả các seed files SQL một cách an toàn khi triển khai.\n    \n    Tính năng:\n    - Sử dụng ON CONFLICT DO NOTHING để tránh lỗi duplicate\n    - Có thể chạy nhiều lần mà không gây lỗi\n    - Chạy theo thứ tự đúng dựa trên tên file\n    - Thích hợp cho CI/CD deployment\n    \n    Seeds bao gồm:\n    - Organization types (loại hình tổ chức)\n    - Business categories (phân loại ngành kinh tế theo QĐ 27/2018/QĐ-TTg)\n    ",
        "operationId": "DatabaseSeederController_runDatabaseSeeds",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Database seeds đã được chạy thành công",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "seedsExecuted": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "executionTime": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Chỉ SUPER_ADMIN được phép chạy seeds"
          },
          "500": {
            "description": "Lỗi khi chạy database seeds"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Chạy database seeds an toàn cho deployment",
        "tags": [
          "Database Seeder"
        ]
      }
    },
    "/api/database-seeder/seeds/status": {
      "get": {
        "description": "Trả về số lượng records hiện tại trong các bảng seeds để kiểm tra tình trạng",
        "operationId": "DatabaseSeederController_getDatabaseSeedsStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Trạng thái seeds được trả về thành công",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organizationTypesCount": {
                      "type": "number"
                    },
                    "businessCategoriesCount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Kiểm tra trạng thái database seeds",
        "tags": [
          "Database Seeder"
        ]
      }
    }
  },
  "info": {
    "title": "VCCI-Member System API",
    "description": "API documentation for the VCCI-Member System",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Login and user authentication"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development Server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Deploy Server"
    }
  ],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email for login",
            "example": "admin@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password for login",
            "example": "123!@#"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "description": "Current password",
            "example": "123!@#"
          },
          "newPassword": {
            "type": "string",
            "description": "New password",
            "example": "newPassword123!",
            "minLength": 6
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email address for login",
            "uniqueItems": true
          },
          "password": {
            "type": "string",
            "description": "Password for the user",
            "minLength": 6
          },
          "role": {
            "type": "string",
            "description": "Role of the user",
            "enum": [
              "SUPER_ADMIN",
              "ADMIN",
              "MANAGEMENT",
              "MEMBER"
            ],
            "default": "MANAGEMENT"
          },
          "department": {
            "type": "string",
            "description": "Department of the user"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the user is active",
            "default": true
          }
        },
        "required": [
          "fullName",
          "email",
          "password",
          "role",
          "active"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email address for login"
          },
          "password": {
            "type": "string",
            "description": "New password (will be hashed automatically)",
            "minLength": 6
          },
          "role": {
            "type": "string",
            "description": "Role of the user",
            "enum": [
              "SUPER_ADMIN",
              "ADMIN",
              "MANAGEMENT",
              "MEMBER"
            ]
          },
          "department": {
            "type": "string",
            "description": "Department of the user"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the user is active"
          }
        }
      },
      "UpdateUserStatusDto": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Whether the user should be active or inactive"
          }
        },
        "required": [
          "active"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "description": "New password for the user",
            "minLength": 6
          }
        },
        "required": [
          "newPassword"
        ]
      },
      "FileResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "File ID"
          },
          "fileName": {
            "type": "string",
            "description": "File name"
          },
          "fileType": {
            "type": "string",
            "enum": [
              "IMAGE",
              "VIDEO",
              "AUDIO",
              "DOCUMENT",
              "PDF",
              "EXCEL",
              "OTHER"
            ],
            "description": "File type"
          },
          "storeType": {
            "type": "string",
            "enum": [
              "LOCAL",
              "S3"
            ],
            "description": "Storage type"
          },
          "mimeType": {
            "type": "string",
            "description": "MIME type"
          },
          "fileSize": {
            "type": "number",
            "description": "File size in bytes"
          },
          "storagePath": {
            "type": "string",
            "description": "Storage path or S3 key"
          },
          "publicUrl": {
            "type": "string",
            "description": "Public URL"
          },
          "checksum": {
            "type": "string",
            "description": "File checksum"
          },
          "entityType": {
            "type": "string",
            "description": "Entity type"
          },
          "entityId": {
            "type": "string",
            "description": "Entity ID"
          },
          "tempKey": {
            "type": "string",
            "description": "Temporary key for grouping files"
          },
          "category": {
            "type": "string",
            "description": "File category"
          },
          "description": {
            "type": "string",
            "description": "File description"
          },
          "folderId": {
            "type": "string",
            "description": "Folder ID"
          },
          "uploadedById": {
            "type": "string",
            "description": "Uploaded by user ID"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE",
              "INTERNAL"
            ],
            "description": "File visibility"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation date"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update date"
          },
          "deleted": {
            "type": "boolean",
            "description": "Whether file is deleted"
          }
        },
        "required": [
          "id",
          "fileName",
          "fileType",
          "storeType",
          "storagePath",
          "visibility",
          "createdAt",
          "updatedAt",
          "deleted"
        ]
      },
      "CreateFolderDto": {
        "type": "object",
        "properties": {
          "parentPath": {
            "type": "string",
            "description": "Parent folder path"
          },
          "name": {
            "type": "string",
            "description": "Folder name"
          }
        },
        "required": [
          "parentPath",
          "name"
        ]
      },
      "AttachFilesDto": {
        "type": "object",
        "properties": {
          "tempKey": {
            "type": "string",
            "description": "Temporary key to identify files to attach",
            "example": "temp_abc123"
          },
          "entityType": {
            "type": "string",
            "description": "Type of entity to attach files to",
            "example": "MEMBER"
          },
          "entityId": {
            "type": "string",
            "description": "ID of the entity to attach files to",
            "example": "uuid-member-id"
          }
        },
        "required": [
          "tempKey",
          "entityType",
          "entityId"
        ]
      },
      "AttachFilesResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "updatedCount": {
            "type": "number",
            "description": "Number of files updated"
          }
        },
        "required": [
          "message",
          "updatedCount"
        ]
      },
      "CreateMemberEnterpriseDetailDto": {
        "type": "object",
        "properties": {
          "businessRegistrationNo": {
            "type": "string",
            "description": "Số đăng ký kinh doanh"
          },
          "businessRegistrationDate": {
            "format": "date-time",
            "type": "string",
            "description": "Ngày đăng ký kinh doanh"
          },
          "issuedBy": {
            "type": "string",
            "description": "Nơi cấp"
          },
          "registeredCapital": {
            "type": "number",
            "description": "Vốn điều lệ"
          },
          "totalAsset": {
            "type": "number",
            "description": "Tổng tài sản"
          },
          "previousYearRevenue": {
            "type": "number",
            "description": "Doanh thu năm trước"
          },
          "totalEmployees": {
            "type": "number",
            "description": "Tổng số nhân viên"
          },
          "branchInfo": {
            "type": "string",
            "description": "Thông tin chi nhánh"
          },
          "organizationTypes": {
            "description": "Loại hình tổ chức",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "businessRegistrationNo",
          "organizationTypes"
        ]
      },
      "CreateMemberAssociationDetailDto": {
        "type": "object",
        "properties": {
          "establishmentLicenseNo": {
            "type": "string",
            "description": "Số quyết định thành lập"
          },
          "establishmentDate": {
            "format": "date-time",
            "type": "string",
            "description": "Ngày thành lập"
          },
          "issuedBy": {
            "type": "string",
            "description": "Nơi cấp"
          },
          "totalMembers": {
            "type": "number",
            "description": "Tổng số hội viên"
          }
        },
        "required": [
          "establishmentLicenseNo"
        ]
      },
      "CreateMemberContactDto": {
        "type": "object",
        "properties": {
          "contactRole": {
            "type": "string",
            "enum": [
              "CHAIR_PERSON",
              "CEO",
              "CHIEF_OFFICE",
              "SECRETARY_GENERAL",
              "CONTACT_1",
              "CONTACT_2"
            ],
            "description": "Vai trò liên hệ"
          },
          "fullName": {
            "type": "string",
            "description": "Họ và tên"
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER"
            ],
            "description": "Giới tính"
          },
          "telephone": {
            "type": "string",
            "description": "Số điện thoại cố định"
          },
          "mobile": {
            "type": "string",
            "description": "Số điện thoại di động"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú"
          }
        },
        "required": [
          "contactRole",
          "fullName"
        ]
      },
      "CreateMemberDto": {
        "type": "object",
        "properties": {
          "applicationType": {
            "type": "string",
            "enum": [
              "ENTERPRISE",
              "ASSOCIATION"
            ],
            "description": "Loại đơn đăng ký"
          },
          "memberType": {
            "type": "string",
            "enum": [
              "LINKED",
              "OFFICIAL",
              "HONORARY"
            ],
            "description": "Loại hội viên",
            "default": "LINKED"
          },
          "vietnameseName": {
            "type": "string",
            "description": "Tên tiếng Việt"
          },
          "englishName": {
            "type": "string",
            "description": "Tên tiếng Anh"
          },
          "abbreviation": {
            "type": "string",
            "description": "Tên viết tắt"
          },
          "officeAddress": {
            "type": "string",
            "description": "Địa chỉ trụ sở chính"
          },
          "businessAddress": {
            "type": "string",
            "description": "Địa chỉ kinh doanh"
          },
          "telephone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "website": {
            "type": "string",
            "description": "Website"
          },
          "taxCode": {
            "type": "string",
            "description": "Mã số thuế"
          },
          "expireDate": {
            "format": "date-time",
            "type": "string",
            "description": "Ngày hết hạn"
          },
          "remarks": {
            "type": "string",
            "description": "Ghi chú"
          },
          "enterpriseDetail": {
            "description": "Chi tiết doanh nghiệp",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateMemberEnterpriseDetailDto"
              }
            ]
          },
          "associationDetail": {
            "description": "Chi tiết hiệp hội",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateMemberAssociationDetailDto"
              }
            ]
          },
          "contacts": {
            "description": "Danh sách người liên hệ",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateMemberContactDto"
            }
          },
          "businessCategoryIds": {
            "description": "Danh mục ngành nghề",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attachmentIds": {
            "description": "Danh sách file đính kèm",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "applicationType",
          "vietnameseName",
          "officeAddress",
          "telephone",
          "email",
          "contacts"
        ]
      },
      "MemberEnterpriseDetailResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "businessRegistrationNo": {
            "type": "string"
          },
          "businessRegistrationDate": {
            "format": "date-time",
            "type": "string"
          },
          "issuedBy": {
            "type": "string"
          },
          "registeredCapital": {
            "type": "number"
          },
          "totalAsset": {
            "type": "number"
          },
          "previousYearRevenue": {
            "type": "number"
          },
          "totalEmployees": {
            "type": "number"
          },
          "branchInfo": {
            "type": "string"
          },
          "organizationTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "businessRegistrationNo",
          "organizationTypes"
        ]
      },
      "MemberAssociationDetailResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "establishmentLicenseNo": {
            "type": "string"
          },
          "establishmentDate": {
            "format": "date-time",
            "type": "string"
          },
          "issuedBy": {
            "type": "string"
          },
          "totalMembers": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "establishmentLicenseNo"
        ]
      },
      "MemberContactResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "contactRole": {
            "type": "string",
            "enum": [
              "CHAIR_PERSON",
              "CEO",
              "CHIEF_OFFICE",
              "SECRETARY_GENERAL",
              "CONTACT_1",
              "CONTACT_2"
            ]
          },
          "fullName": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER"
            ]
          },
          "telephone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "note": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "contactRole",
          "fullName"
        ]
      },
      "BusinessCategoryResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID của business category"
          },
          "code": {
            "type": "string",
            "description": "Mã danh mục",
            "example": "A"
          },
          "name": {
            "type": "string",
            "description": "Tên danh mục",
            "example": "Nông nghiệp, lâm nghiệp và thuỷ sản"
          },
          "level": {
            "type": "number",
            "description": "Cấp độ",
            "example": 1
          },
          "parentId": {
            "type": "string",
            "description": "ID danh mục cha"
          },
          "isActive": {
            "type": "boolean",
            "description": "Trạng thái hoạt động"
          }
        },
        "required": [
          "id",
          "name",
          "level",
          "isActive"
        ]
      },
      "MemberResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "applicationCode": {
            "type": "string"
          },
          "applicationType": {
            "type": "string",
            "enum": [
              "ENTERPRISE",
              "ASSOCIATION"
            ]
          },
          "memberType": {
            "type": "string",
            "enum": [
              "LINKED",
              "OFFICIAL",
              "HONORARY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "CANCELLED",
              "ACTIVE",
              "SUSPENDED"
            ]
          },
          "vietnameseName": {
            "type": "string"
          },
          "englishName": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "officeAddress": {
            "type": "string"
          },
          "businessAddress": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "taxCode": {
            "type": "string"
          },
          "submittedDate": {
            "format": "date-time",
            "type": "string"
          },
          "approvedDate": {
            "format": "date-time",
            "type": "string"
          },
          "joinDate": {
            "format": "date-time",
            "type": "string"
          },
          "expireDate": {
            "format": "date-time",
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "enterpriseDetail": {
            "$ref": "#/components/schemas/MemberEnterpriseDetailResponseDto"
          },
          "associationDetail": {
            "$ref": "#/components/schemas/MemberAssociationDetailResponseDto"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberContactResponseDto"
            }
          },
          "businessCategories": {
            "description": "Danh sách ngành nghề kinh doanh",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessCategoryResponseDto"
            }
          },
          "memberPaymentHistory": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "applicationType",
          "memberType",
          "status",
          "vietnameseName",
          "officeAddress",
          "telephone",
          "email",
          "contacts",
          "businessCategories",
          "memberPaymentHistory",
          "attachmentIds",
          "createdAt",
          "updatedAt"
        ]
      },
      "MemberListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberResponseDto"
            }
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          }
        },
        "required": [
          "data",
          "total",
          "page",
          "limit",
          "totalPages"
        ]
      },
      "UpdateMemberDto": {
        "type": "object",
        "properties": {
          "applicationType": {
            "type": "string",
            "enum": [
              "ENTERPRISE",
              "ASSOCIATION"
            ],
            "description": "Loại đơn đăng ký"
          },
          "memberType": {
            "type": "string",
            "enum": [
              "LINKED",
              "OFFICIAL",
              "HONORARY"
            ],
            "description": "Loại hội viên",
            "default": "LINKED"
          },
          "vietnameseName": {
            "type": "string",
            "description": "Tên tiếng Việt"
          },
          "englishName": {
            "type": "string",
            "description": "Tên tiếng Anh"
          },
          "abbreviation": {
            "type": "string",
            "description": "Tên viết tắt"
          },
          "officeAddress": {
            "type": "string",
            "description": "Địa chỉ trụ sở chính"
          },
          "businessAddress": {
            "type": "string",
            "description": "Địa chỉ kinh doanh"
          },
          "telephone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "website": {
            "type": "string",
            "description": "Website"
          },
          "taxCode": {
            "type": "string",
            "description": "Mã số thuế"
          },
          "expireDate": {
            "format": "date-time",
            "type": "string",
            "description": "Ngày hết hạn"
          },
          "remarks": {
            "type": "string",
            "description": "Ghi chú"
          },
          "enterpriseDetail": {
            "description": "Chi tiết doanh nghiệp",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateMemberEnterpriseDetailDto"
              }
            ]
          },
          "associationDetail": {
            "description": "Chi tiết hiệp hội",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateMemberAssociationDetailDto"
              }
            ]
          },
          "contacts": {
            "description": "Danh sách người liên hệ",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateMemberContactDto"
            }
          },
          "businessCategoryIds": {
            "description": "Danh mục ngành nghề",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attachmentIds": {
            "description": "Danh sách file đính kèm",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ChangeMemberStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "APPROVED",
              "REJECTED",
              "CANCELLED",
              "ACTIVE",
              "SUSPENDED"
            ],
            "description": "Trạng thái mới"
          },
          "remark": {
            "type": "string",
            "description": "Ghi chú thay đổi trạng thái"
          }
        },
        "required": [
          "status"
        ]
      },
      "ActivateMemberDto": {
        "type": "object",
        "properties": {
          "feeAmount": {
            "type": "number",
            "description": "Số tiền hội phí",
            "example": 5000000,
            "minimum": 0
          },
          "attachmentIds": {
            "description": "Danh sách ID file đính kèm (chứng từ thanh toán)",
            "example": [
              "file-id-1",
              "file-id-2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "note": {
            "type": "string",
            "description": "Ghi chú cho khoản thanh toán",
            "example": "Hội phí năm 2024"
          }
        },
        "required": [
          "feeAmount",
          "attachmentIds"
        ]
      },
      "CreateBusinessCategoryDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Mã danh mục (ví dụ: \"A\", \"11\", \"1200\")",
            "example": "A"
          },
          "name": {
            "type": "string",
            "description": "Tên danh mục ngành nghề",
            "example": "Nông nghiệp, lâm nghiệp và thủy sản"
          },
          "level": {
            "type": "number",
            "description": "Cấp độ của danh mục (1, 2, 3...)",
            "example": 1,
            "minimum": 1
          },
          "parentId": {
            "type": "string",
            "description": "ID của danh mục cha (nếu có)",
            "example": "clxxxxxxxxxxxxx"
          }
        },
        "required": [
          "name",
          "level"
        ]
      },
      "Object": {
        "type": "object",
        "properties": {}
      },
      "UpdateBusinessCategoryDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Mã danh mục",
            "example": "A"
          },
          "name": {
            "type": "string",
            "description": "Tên danh mục ngành nghề",
            "example": "Nông nghiệp, lâm nghiệp và thủy sản"
          },
          "level": {
            "type": "number",
            "description": "Cấp độ của danh mục",
            "example": 1,
            "minimum": 1
          },
          "parentId": {
            "type": "object",
            "description": "ID của danh mục cha (null để xóa parent)",
            "example": "clxxxxxxxxxxxxx",
            "nullable": true
          }
        }
      },
      "CreatePaymentHistoryDto": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string",
            "description": "ID của hội viên",
            "example": "clx1234567890abcdef"
          },
          "paymentYear": {
            "type": "number",
            "description": "Năm hội phí",
            "example": 2024,
            "minimum": 2000,
            "maximum": 2100
          },
          "paymentName": {
            "type": "string",
            "description": "Tên giao dịch thanh toán",
            "example": "Hội phí năm 2024 - Công ty ABC"
          },
          "paymentCode": {
            "type": "string",
            "description": "Mã giao dịch thanh toán",
            "example": "VCCI-PAY-2024-001"
          },
          "amount": {
            "type": "number",
            "description": "Số tiền thanh toán",
            "example": 500000
          },
          "paymentDate": {
            "type": "string",
            "description": "Ngày thanh toán",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "method": {
            "type": "string",
            "description": "Hình thức thanh toán",
            "enum": [
              "CASH",
              "BANK_TRANSFER",
              "ONLINE"
            ],
            "example": "BANK_TRANSFER"
          },
          "status": {
            "type": "string",
            "description": "Trạng thái thanh toán",
            "enum": [
              "PENDING",
              "PAID",
              "CANCELLED"
            ],
            "example": "PAID"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú",
            "example": "Thanh toán hội phí năm 2024"
          },
          "attachmentIds": {
            "description": "Danh sách ID file đính kèm",
            "example": [
              "file1",
              "file2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "memberId",
          "paymentYear",
          "paymentCode",
          "amount",
          "paymentDate"
        ]
      },
      "PaymentHistoryResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID của lịch sử thanh toán",
            "example": "clx1234567890abcdef"
          },
          "memberId": {
            "type": "string",
            "description": "ID của hội viên",
            "example": "clx1234567890abcdef"
          },
          "paymentYear": {
            "type": "number",
            "description": "Năm hội phí",
            "example": 2024
          },
          "paymentName": {
            "type": "object",
            "description": "Tên giao dịch thanh toán",
            "example": "Hội phí năm 2024 - Công ty ABC"
          },
          "paymentCode": {
            "type": "string",
            "description": "Mã giao dịch thanh toán",
            "example": "VCCI-PAY-2024-001"
          },
          "amount": {
            "type": "number",
            "description": "Số tiền thanh toán",
            "example": 500000
          },
          "paymentDate": {
            "format": "date-time",
            "type": "string",
            "description": "Ngày thanh toán",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "method": {
            "type": "string",
            "description": "Hình thức thanh toán",
            "enum": [
              "CASH",
              "BANK_TRANSFER",
              "ONLINE"
            ],
            "example": "BANK_TRANSFER"
          },
          "status": {
            "type": "string",
            "description": "Trạng thái thanh toán",
            "enum": [
              "PENDING",
              "PAID",
              "CANCELLED"
            ],
            "example": "PAID"
          },
          "note": {
            "type": "object",
            "description": "Ghi chú",
            "example": "Thanh toán hội phí năm 2024"
          },
          "attachmentIds": {
            "description": "Danh sách ID file đính kèm",
            "example": [
              "file1",
              "file2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Ngày tạo",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Ngày cập nhật",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "member": {
            "type": "object",
            "description": "Thông tin hội viên"
          }
        },
        "required": [
          "id",
          "memberId",
          "paymentYear",
          "paymentCode",
          "amount",
          "paymentDate",
          "attachmentIds",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdatePaymentHistoryDto": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "string",
            "description": "ID của hội viên",
            "example": "clx1234567890abcdef"
          },
          "paymentYear": {
            "type": "number",
            "description": "Năm hội phí",
            "example": 2024,
            "minimum": 2000,
            "maximum": 2100
          },
          "paymentName": {
            "type": "string",
            "description": "Tên giao dịch thanh toán",
            "example": "Hội phí năm 2024 - Công ty ABC"
          },
          "paymentCode": {
            "type": "string",
            "description": "Mã giao dịch thanh toán",
            "example": "VCCI-PAY-2024-001"
          },
          "amount": {
            "type": "number",
            "description": "Số tiền thanh toán",
            "example": 500000
          },
          "paymentDate": {
            "type": "string",
            "description": "Ngày thanh toán",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "method": {
            "type": "string",
            "description": "Hình thức thanh toán",
            "enum": [
              "CASH",
              "BANK_TRANSFER",
              "ONLINE"
            ],
            "example": "BANK_TRANSFER"
          },
          "status": {
            "type": "string",
            "description": "Trạng thái thanh toán",
            "enum": [
              "PENDING",
              "PAID",
              "CANCELLED"
            ],
            "example": "PAID"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú",
            "example": "Thanh toán hội phí năm 2024"
          },
          "attachmentIds": {
            "description": "Danh sách ID file đính kèm",
            "example": [
              "file1",
              "file2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CategoryListResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "List of categories"
          },
          "pagination": {
            "type": "object",
            "description": "Pagination metadata"
          }
        },
        "required": [
          "data",
          "pagination"
        ]
      },
      "CategorySummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Category ID",
            "example": "clr123456789"
          },
          "code": {
            "type": "object",
            "description": "Category code",
            "example": "TNHH",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Category name",
            "example": "Công ty TNHH"
          }
        },
        "required": [
          "id",
          "code",
          "name"
        ]
      },
      "CategoryResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Category ID",
            "example": "clr123456789"
          },
          "name": {
            "type": "string",
            "description": "Category name",
            "example": "Công ty TNHH"
          },
          "code": {
            "type": "object",
            "description": "Category code",
            "example": "TNHH",
            "nullable": true
          },
          "parentId": {
            "type": "object",
            "description": "Parent category ID",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Category type",
            "enum": [
              "ORGANIZATION_TYPE"
            ],
            "example": "ORGANIZATION_TYPE"
          },
          "description": {
            "type": "object",
            "description": "Category description",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether category is active",
            "example": true
          },
          "orderIndex": {
            "type": "object",
            "description": "Display order index",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "description": "Whether category is deleted",
            "example": false
          },
          "createdBy": {
            "type": "object",
            "description": "User ID who created the category",
            "nullable": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp",
            "example": "2024-01-01T00:00:00.000Z"
          }
        },
        "required": [
          "id",
          "name",
          "code",
          "parentId",
          "type",
          "description",
          "isActive",
          "orderIndex",
          "deleted",
          "createdBy",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Category name",
            "example": "Công ty TNHH"
          },
          "code": {
            "type": "string",
            "description": "Category code",
            "example": "TNHH"
          },
          "parentId": {
            "type": "string",
            "description": "Parent category ID for hierarchical categories"
          },
          "type": {
            "type": "string",
            "description": "Category type",
            "enum": [
              "ORGANIZATION_TYPE"
            ],
            "example": "ORGANIZATION_TYPE"
          },
          "description": {
            "type": "string",
            "description": "Category description"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether category is active",
            "default": true
          },
          "orderIndex": {
            "type": "number",
            "description": "Display order index"
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Category name",
            "example": "Công ty TNHH"
          },
          "code": {
            "type": "string",
            "description": "Category code",
            "example": "TNHH"
          },
          "parentId": {
            "type": "string",
            "description": "Parent category ID for hierarchical categories"
          },
          "type": {
            "type": "string",
            "description": "Category type",
            "enum": [
              "ORGANIZATION_TYPE"
            ],
            "example": "ORGANIZATION_TYPE"
          },
          "description": {
            "type": "string",
            "description": "Category description"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether category is active"
          },
          "orderIndex": {
            "type": "number",
            "description": "Display order index"
          }
        }
      }
    }
  }
}
{
  "openapi": "3.0.0",
  "paths": {
    "/api": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "email": {
                          "type": "string"
                        },
                        "fullName": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "department": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "summary": "User login",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "User logout",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        },
        "summary": "Refresh access token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/change-password": {
      "post": {
        "operationId": "AuthController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Current password is incorrect"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Change user password",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/profile": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "email": {
                      "type": "string"
                    },
                    "fullName": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "department": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get current user profile",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/revoke-refresh-token": {
      "post": {
        "operationId": "AuthController_revokeRefreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh token revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Revoke a specific refresh token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/revoke-all-refresh-tokens": {
      "post": {
        "operationId": "AuthController_revokeAllRefreshTokens",
        "parameters": [],
        "responses": {
          "200": {
            "description": "All refresh tokens revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Revoke all refresh tokens for current user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/refresh-tokens": {
      "get": {
        "operationId": "AuthController_getUserRefreshTokens",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Refresh tokens retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "token": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get all active refresh tokens for current user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "409": {
            "description": "Email already exists"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Create a new user",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by email or full name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "description": "Filter by role",
            "schema": {
              "type": "string",
              "enum": [
                "MANAGEMENT",
                "ADMIN",
                "SUPER_ADMIN"
              ]
            }
          },
          {
            "name": "active",
            "required": false,
            "in": "query",
            "description": "Filter by active status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "department",
            "required": false,
            "in": "query",
            "description": "Filter by department",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "required": false,
            "in": "query",
            "description": "Include deleted users",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort by field",
            "schema": {
              "default": "createdAt",
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order (asc/desc)",
            "schema": {
              "default": "desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get all users with filtering and pagination",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/stats": {
      "get": {
        "operationId": "UsersController_getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get user statistics",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get user by ID",
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "Email already exists"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Update user information",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Soft delete user (set deleted flag)",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/status": {
      "patch": {
        "operationId": "UsersController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User status updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Update user active/inactive status",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/reset-password": {
      "patch": {
        "operationId": "UsersController_resetPassword",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Reset user password (no current password required - admin only)",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/restore": {
      "patch": {
        "operationId": "UsersController_restore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User restored successfully"
          },
          "400": {
            "description": "User is not deleted"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Restore a deleted user",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/hard": {
      "delete": {
        "operationId": "UsersController_hardDelete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User permanently deleted"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Permanently delete user",
        "tags": [
          "Users"
        ]
      }
    }
  },
  "info": {
    "title": "Check-in System API",
    "description": "API documentation for the Check-in System",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Login and user authentication"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development Server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Deploy Server"
    }
  ],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email for login",
            "example": "admin@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password for login",
            "example": "123!@#"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "description": "Current password",
            "example": "123!@#"
          },
          "newPassword": {
            "type": "string",
            "description": "New password",
            "example": "newPassword123!",
            "minLength": 6
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email address for login",
            "uniqueItems": true
          },
          "password": {
            "type": "string",
            "description": "Password for the user",
            "minLength": 6
          },
          "role": {
            "type": "string",
            "description": "Role of the user",
            "enum": [
              "MANAGEMENT",
              "ADMIN",
              "SUPER_ADMIN"
            ],
            "default": "MANAGEMENT"
          },
          "department": {
            "type": "string",
            "description": "Department of the user"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the user is active",
            "default": true
          }
        },
        "required": [
          "fullName",
          "email",
          "password",
          "role",
          "active"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email address for login"
          },
          "password": {
            "type": "string",
            "description": "New password (will be hashed automatically)",
            "minLength": 6
          },
          "role": {
            "type": "string",
            "description": "Role of the user",
            "enum": [
              "MANAGEMENT",
              "ADMIN",
              "SUPER_ADMIN"
            ]
          },
          "department": {
            "type": "string",
            "description": "Department of the user"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the user is active"
          }
        }
      },
      "UpdateUserStatusDto": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Whether the user should be active or inactive"
          }
        },
        "required": [
          "active"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "description": "New password for the user",
            "minLength": 6
          }
        },
        "required": [
          "newPassword"
        ]
      }
    }
  }
}